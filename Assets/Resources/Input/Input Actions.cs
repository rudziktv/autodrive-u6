//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.13.0
//     from Assets/Resources/Input/Input Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/Resources/Input/Input Actions.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @InputActions: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input Actions"",
    ""maps"": [
        {
            ""name"": ""Development"",
            ""id"": ""bea4b291-7728-449b-bec5-758c936fa876"",
            ""actions"": [
                {
                    ""name"": ""Computer Up"",
                    ""type"": ""Button"",
                    ""id"": ""3cf143a0-19ce-4384-b159-3e34d78a3558"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Computer Down"",
                    ""type"": ""Button"",
                    ""id"": ""ea65dcfb-ca44-49a6-bf74-72729fb5550d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Computer Back"",
                    ""type"": ""Button"",
                    ""id"": ""fb0f7fbe-50f7-44bf-ba5e-c30516cac52f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Computer Ok"",
                    ""type"": ""Button"",
                    ""id"": ""9a55cfd9-dd7d-4b69-a502-f748f6c16d28"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Computer Prev Page"",
                    ""type"": ""Button"",
                    ""id"": ""d7e5c4e8-7aca-4dd0-aa20-286da3ec042e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Computer Next Page"",
                    ""type"": ""Button"",
                    ""id"": ""b048965e-3c76-475e-b2f2-5ab810269eb9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleHeadlights"",
                    ""type"": ""Button"",
                    ""id"": ""b67b231c-90ca-4542-975d-111987cc4ff7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleIgnition"",
                    ""type"": ""Button"",
                    ""id"": ""9caed4af-25c5-4625-a8d0-0f5dc995b0c2"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Toggle Camera Lock"",
                    ""type"": ""Button"",
                    ""id"": ""61e7bb0e-e0dc-4dcb-a3e2-226968ab88d5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera X"",
                    ""type"": ""Value"",
                    ""id"": ""a2459c61-7dd4-4215-84b0-9e32b28d900c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Y"",
                    ""type"": ""Value"",
                    ""id"": ""2b17e473-ab4c-47c7-9a25-ac201c0d0870"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""32025fb6-3435-497a-8a33-86bf936cbd99"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera Zoom In"",
                    ""type"": ""Button"",
                    ""id"": ""c2d1cba2-dfa0-427c-b9d8-60b7171b3bb0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera Zoom Out"",
                    ""type"": ""Button"",
                    ""id"": ""50d521e6-186a-4796-a129-b0b48a350451"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera Zoom Reset"",
                    ""type"": ""Button"",
                    ""id"": ""b087964c-3946-4b44-84c4-d79c97ba1049"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera Zoom Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""08d9dfc2-8436-4bb3-8bf5-578875bb3054"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Force Brake Lights"",
                    ""type"": ""Button"",
                    ""id"": ""03636c61-6f61-494b-815e-0f60f04a3424"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Person Movement"",
                    ""type"": ""Value"",
                    ""id"": ""560acae8-9db0-46ae-8cb4-41e24821571b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Toggle Folding Mirrors"",
                    ""type"": ""Button"",
                    ""id"": ""ef1d9d06-39ff-4293-a981-06736f0615de"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""18e09f6e-5ba6-4f00-b6c7-eba6106b606f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""424a2c49-d031-4889-b625-685efccfcd7a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34676683-1e08-4e9a-89a1-bab77d479f93"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dc2da78-b534-45e1-b46c-fff14b672d5f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4808c8dd-5d54-4c9b-8a58-042e9763db7a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Ok"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8a77ad3-20e7-41a8-9ac7-3029f46d9e81"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Prev Page"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f5f3288-0c72-459d-b21b-e82ddae535a6"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Next Page"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5e0b269-b410-4c69-9f47-cf808d63ef50"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleHeadlights"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""856d4348-f42b-40b3-9e1d-679db6eda7d4"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleIgnition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3828445-1bc1-4bdd-8262-0d46355fc4a4"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Toggle Camera Lock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd96a199-15f5-4c58-9ebc-30face867a2e"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ab9d078-c69b-46bc-bde5-86237733b0fc"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6b845eb-7039-4937-9372-831ffe13e722"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a2892e1-4e33-45a4-8359-089bac7b413f"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Zoom In"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3df0ab5f-d7f8-40c8-b1c8-c73e970a1c66"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Zoom Out"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6c45c5a-b51e-4121-a7c6-a41f8890821e"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Zoom Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07308dee-9606-4ba8-9ab7-27615bebd50c"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Zoom Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d13d4c16-69c7-468e-bf6f-d8a7f2b28804"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Force Brake Lights"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""88a71c3f-4b3d-4e65-b050-f32449a9b748"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Person Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""638942f1-b323-4885-a304-936e90e3e783"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Person Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4e33068a-cdf5-4681-9f46-4ceb7e988e5e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Person Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""320b59cb-ed71-45ad-9ef2-6dc93fb0393d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Person Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ada9d7e1-1874-483e-971d-850da536470b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Person Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2a4e11ba-3acd-4227-8d2b-bb84a6614652"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Toggle Folding Mirrors"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3654bfb1-6290-4e41-88e3-a386e733bc90"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d58b06ce-a131-4f98-aaa8-389caecb3bf4"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Development
        m_Development = asset.FindActionMap("Development", throwIfNotFound: true);
        m_Development_ComputerUp = m_Development.FindAction("Computer Up", throwIfNotFound: true);
        m_Development_ComputerDown = m_Development.FindAction("Computer Down", throwIfNotFound: true);
        m_Development_ComputerBack = m_Development.FindAction("Computer Back", throwIfNotFound: true);
        m_Development_ComputerOk = m_Development.FindAction("Computer Ok", throwIfNotFound: true);
        m_Development_ComputerPrevPage = m_Development.FindAction("Computer Prev Page", throwIfNotFound: true);
        m_Development_ComputerNextPage = m_Development.FindAction("Computer Next Page", throwIfNotFound: true);
        m_Development_ToggleHeadlights = m_Development.FindAction("ToggleHeadlights", throwIfNotFound: true);
        m_Development_ToggleIgnition = m_Development.FindAction("ToggleIgnition", throwIfNotFound: true);
        m_Development_ToggleCameraLock = m_Development.FindAction("Toggle Camera Lock", throwIfNotFound: true);
        m_Development_CameraX = m_Development.FindAction("Camera X", throwIfNotFound: true);
        m_Development_CameraY = m_Development.FindAction("Camera Y", throwIfNotFound: true);
        m_Development_Camera = m_Development.FindAction("Camera", throwIfNotFound: true);
        m_Development_CameraZoomIn = m_Development.FindAction("Camera Zoom In", throwIfNotFound: true);
        m_Development_CameraZoomOut = m_Development.FindAction("Camera Zoom Out", throwIfNotFound: true);
        m_Development_CameraZoomReset = m_Development.FindAction("Camera Zoom Reset", throwIfNotFound: true);
        m_Development_CameraZoomToggle = m_Development.FindAction("Camera Zoom Toggle", throwIfNotFound: true);
        m_Development_ForceBrakeLights = m_Development.FindAction("Force Brake Lights", throwIfNotFound: true);
        m_Development_PersonMovement = m_Development.FindAction("Person Movement", throwIfNotFound: true);
        m_Development_ToggleFoldingMirrors = m_Development.FindAction("Toggle Folding Mirrors", throwIfNotFound: true);
        m_Development_Interact = m_Development.FindAction("Interact", throwIfNotFound: true);
    }

    ~@InputActions()
    {
        UnityEngine.Debug.Assert(!m_Development.enabled, "This will cause a leak and performance issues, InputActions.Development.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Development
    private readonly InputActionMap m_Development;
    private List<IDevelopmentActions> m_DevelopmentActionsCallbackInterfaces = new List<IDevelopmentActions>();
    private readonly InputAction m_Development_ComputerUp;
    private readonly InputAction m_Development_ComputerDown;
    private readonly InputAction m_Development_ComputerBack;
    private readonly InputAction m_Development_ComputerOk;
    private readonly InputAction m_Development_ComputerPrevPage;
    private readonly InputAction m_Development_ComputerNextPage;
    private readonly InputAction m_Development_ToggleHeadlights;
    private readonly InputAction m_Development_ToggleIgnition;
    private readonly InputAction m_Development_ToggleCameraLock;
    private readonly InputAction m_Development_CameraX;
    private readonly InputAction m_Development_CameraY;
    private readonly InputAction m_Development_Camera;
    private readonly InputAction m_Development_CameraZoomIn;
    private readonly InputAction m_Development_CameraZoomOut;
    private readonly InputAction m_Development_CameraZoomReset;
    private readonly InputAction m_Development_CameraZoomToggle;
    private readonly InputAction m_Development_ForceBrakeLights;
    private readonly InputAction m_Development_PersonMovement;
    private readonly InputAction m_Development_ToggleFoldingMirrors;
    private readonly InputAction m_Development_Interact;
    /// <summary>
    /// Provides access to input actions defined in input action map "Development".
    /// </summary>
    public struct DevelopmentActions
    {
        private @InputActions m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public DevelopmentActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "Development/ComputerUp".
        /// </summary>
        public InputAction @ComputerUp => m_Wrapper.m_Development_ComputerUp;
        /// <summary>
        /// Provides access to the underlying input action "Development/ComputerDown".
        /// </summary>
        public InputAction @ComputerDown => m_Wrapper.m_Development_ComputerDown;
        /// <summary>
        /// Provides access to the underlying input action "Development/ComputerBack".
        /// </summary>
        public InputAction @ComputerBack => m_Wrapper.m_Development_ComputerBack;
        /// <summary>
        /// Provides access to the underlying input action "Development/ComputerOk".
        /// </summary>
        public InputAction @ComputerOk => m_Wrapper.m_Development_ComputerOk;
        /// <summary>
        /// Provides access to the underlying input action "Development/ComputerPrevPage".
        /// </summary>
        public InputAction @ComputerPrevPage => m_Wrapper.m_Development_ComputerPrevPage;
        /// <summary>
        /// Provides access to the underlying input action "Development/ComputerNextPage".
        /// </summary>
        public InputAction @ComputerNextPage => m_Wrapper.m_Development_ComputerNextPage;
        /// <summary>
        /// Provides access to the underlying input action "Development/ToggleHeadlights".
        /// </summary>
        public InputAction @ToggleHeadlights => m_Wrapper.m_Development_ToggleHeadlights;
        /// <summary>
        /// Provides access to the underlying input action "Development/ToggleIgnition".
        /// </summary>
        public InputAction @ToggleIgnition => m_Wrapper.m_Development_ToggleIgnition;
        /// <summary>
        /// Provides access to the underlying input action "Development/ToggleCameraLock".
        /// </summary>
        public InputAction @ToggleCameraLock => m_Wrapper.m_Development_ToggleCameraLock;
        /// <summary>
        /// Provides access to the underlying input action "Development/CameraX".
        /// </summary>
        public InputAction @CameraX => m_Wrapper.m_Development_CameraX;
        /// <summary>
        /// Provides access to the underlying input action "Development/CameraY".
        /// </summary>
        public InputAction @CameraY => m_Wrapper.m_Development_CameraY;
        /// <summary>
        /// Provides access to the underlying input action "Development/Camera".
        /// </summary>
        public InputAction @Camera => m_Wrapper.m_Development_Camera;
        /// <summary>
        /// Provides access to the underlying input action "Development/CameraZoomIn".
        /// </summary>
        public InputAction @CameraZoomIn => m_Wrapper.m_Development_CameraZoomIn;
        /// <summary>
        /// Provides access to the underlying input action "Development/CameraZoomOut".
        /// </summary>
        public InputAction @CameraZoomOut => m_Wrapper.m_Development_CameraZoomOut;
        /// <summary>
        /// Provides access to the underlying input action "Development/CameraZoomReset".
        /// </summary>
        public InputAction @CameraZoomReset => m_Wrapper.m_Development_CameraZoomReset;
        /// <summary>
        /// Provides access to the underlying input action "Development/CameraZoomToggle".
        /// </summary>
        public InputAction @CameraZoomToggle => m_Wrapper.m_Development_CameraZoomToggle;
        /// <summary>
        /// Provides access to the underlying input action "Development/ForceBrakeLights".
        /// </summary>
        public InputAction @ForceBrakeLights => m_Wrapper.m_Development_ForceBrakeLights;
        /// <summary>
        /// Provides access to the underlying input action "Development/PersonMovement".
        /// </summary>
        public InputAction @PersonMovement => m_Wrapper.m_Development_PersonMovement;
        /// <summary>
        /// Provides access to the underlying input action "Development/ToggleFoldingMirrors".
        /// </summary>
        public InputAction @ToggleFoldingMirrors => m_Wrapper.m_Development_ToggleFoldingMirrors;
        /// <summary>
        /// Provides access to the underlying input action "Development/Interact".
        /// </summary>
        public InputAction @Interact => m_Wrapper.m_Development_Interact;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_Development; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="DevelopmentActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(DevelopmentActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="DevelopmentActions" />
        public void AddCallbacks(IDevelopmentActions instance)
        {
            if (instance == null || m_Wrapper.m_DevelopmentActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DevelopmentActionsCallbackInterfaces.Add(instance);
            @ComputerUp.started += instance.OnComputerUp;
            @ComputerUp.performed += instance.OnComputerUp;
            @ComputerUp.canceled += instance.OnComputerUp;
            @ComputerDown.started += instance.OnComputerDown;
            @ComputerDown.performed += instance.OnComputerDown;
            @ComputerDown.canceled += instance.OnComputerDown;
            @ComputerBack.started += instance.OnComputerBack;
            @ComputerBack.performed += instance.OnComputerBack;
            @ComputerBack.canceled += instance.OnComputerBack;
            @ComputerOk.started += instance.OnComputerOk;
            @ComputerOk.performed += instance.OnComputerOk;
            @ComputerOk.canceled += instance.OnComputerOk;
            @ComputerPrevPage.started += instance.OnComputerPrevPage;
            @ComputerPrevPage.performed += instance.OnComputerPrevPage;
            @ComputerPrevPage.canceled += instance.OnComputerPrevPage;
            @ComputerNextPage.started += instance.OnComputerNextPage;
            @ComputerNextPage.performed += instance.OnComputerNextPage;
            @ComputerNextPage.canceled += instance.OnComputerNextPage;
            @ToggleHeadlights.started += instance.OnToggleHeadlights;
            @ToggleHeadlights.performed += instance.OnToggleHeadlights;
            @ToggleHeadlights.canceled += instance.OnToggleHeadlights;
            @ToggleIgnition.started += instance.OnToggleIgnition;
            @ToggleIgnition.performed += instance.OnToggleIgnition;
            @ToggleIgnition.canceled += instance.OnToggleIgnition;
            @ToggleCameraLock.started += instance.OnToggleCameraLock;
            @ToggleCameraLock.performed += instance.OnToggleCameraLock;
            @ToggleCameraLock.canceled += instance.OnToggleCameraLock;
            @CameraX.started += instance.OnCameraX;
            @CameraX.performed += instance.OnCameraX;
            @CameraX.canceled += instance.OnCameraX;
            @CameraY.started += instance.OnCameraY;
            @CameraY.performed += instance.OnCameraY;
            @CameraY.canceled += instance.OnCameraY;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @CameraZoomIn.started += instance.OnCameraZoomIn;
            @CameraZoomIn.performed += instance.OnCameraZoomIn;
            @CameraZoomIn.canceled += instance.OnCameraZoomIn;
            @CameraZoomOut.started += instance.OnCameraZoomOut;
            @CameraZoomOut.performed += instance.OnCameraZoomOut;
            @CameraZoomOut.canceled += instance.OnCameraZoomOut;
            @CameraZoomReset.started += instance.OnCameraZoomReset;
            @CameraZoomReset.performed += instance.OnCameraZoomReset;
            @CameraZoomReset.canceled += instance.OnCameraZoomReset;
            @CameraZoomToggle.started += instance.OnCameraZoomToggle;
            @CameraZoomToggle.performed += instance.OnCameraZoomToggle;
            @CameraZoomToggle.canceled += instance.OnCameraZoomToggle;
            @ForceBrakeLights.started += instance.OnForceBrakeLights;
            @ForceBrakeLights.performed += instance.OnForceBrakeLights;
            @ForceBrakeLights.canceled += instance.OnForceBrakeLights;
            @PersonMovement.started += instance.OnPersonMovement;
            @PersonMovement.performed += instance.OnPersonMovement;
            @PersonMovement.canceled += instance.OnPersonMovement;
            @ToggleFoldingMirrors.started += instance.OnToggleFoldingMirrors;
            @ToggleFoldingMirrors.performed += instance.OnToggleFoldingMirrors;
            @ToggleFoldingMirrors.canceled += instance.OnToggleFoldingMirrors;
            @Interact.started += instance.OnInteract;
            @Interact.performed += instance.OnInteract;
            @Interact.canceled += instance.OnInteract;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="DevelopmentActions" />
        private void UnregisterCallbacks(IDevelopmentActions instance)
        {
            @ComputerUp.started -= instance.OnComputerUp;
            @ComputerUp.performed -= instance.OnComputerUp;
            @ComputerUp.canceled -= instance.OnComputerUp;
            @ComputerDown.started -= instance.OnComputerDown;
            @ComputerDown.performed -= instance.OnComputerDown;
            @ComputerDown.canceled -= instance.OnComputerDown;
            @ComputerBack.started -= instance.OnComputerBack;
            @ComputerBack.performed -= instance.OnComputerBack;
            @ComputerBack.canceled -= instance.OnComputerBack;
            @ComputerOk.started -= instance.OnComputerOk;
            @ComputerOk.performed -= instance.OnComputerOk;
            @ComputerOk.canceled -= instance.OnComputerOk;
            @ComputerPrevPage.started -= instance.OnComputerPrevPage;
            @ComputerPrevPage.performed -= instance.OnComputerPrevPage;
            @ComputerPrevPage.canceled -= instance.OnComputerPrevPage;
            @ComputerNextPage.started -= instance.OnComputerNextPage;
            @ComputerNextPage.performed -= instance.OnComputerNextPage;
            @ComputerNextPage.canceled -= instance.OnComputerNextPage;
            @ToggleHeadlights.started -= instance.OnToggleHeadlights;
            @ToggleHeadlights.performed -= instance.OnToggleHeadlights;
            @ToggleHeadlights.canceled -= instance.OnToggleHeadlights;
            @ToggleIgnition.started -= instance.OnToggleIgnition;
            @ToggleIgnition.performed -= instance.OnToggleIgnition;
            @ToggleIgnition.canceled -= instance.OnToggleIgnition;
            @ToggleCameraLock.started -= instance.OnToggleCameraLock;
            @ToggleCameraLock.performed -= instance.OnToggleCameraLock;
            @ToggleCameraLock.canceled -= instance.OnToggleCameraLock;
            @CameraX.started -= instance.OnCameraX;
            @CameraX.performed -= instance.OnCameraX;
            @CameraX.canceled -= instance.OnCameraX;
            @CameraY.started -= instance.OnCameraY;
            @CameraY.performed -= instance.OnCameraY;
            @CameraY.canceled -= instance.OnCameraY;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @CameraZoomIn.started -= instance.OnCameraZoomIn;
            @CameraZoomIn.performed -= instance.OnCameraZoomIn;
            @CameraZoomIn.canceled -= instance.OnCameraZoomIn;
            @CameraZoomOut.started -= instance.OnCameraZoomOut;
            @CameraZoomOut.performed -= instance.OnCameraZoomOut;
            @CameraZoomOut.canceled -= instance.OnCameraZoomOut;
            @CameraZoomReset.started -= instance.OnCameraZoomReset;
            @CameraZoomReset.performed -= instance.OnCameraZoomReset;
            @CameraZoomReset.canceled -= instance.OnCameraZoomReset;
            @CameraZoomToggle.started -= instance.OnCameraZoomToggle;
            @CameraZoomToggle.performed -= instance.OnCameraZoomToggle;
            @CameraZoomToggle.canceled -= instance.OnCameraZoomToggle;
            @ForceBrakeLights.started -= instance.OnForceBrakeLights;
            @ForceBrakeLights.performed -= instance.OnForceBrakeLights;
            @ForceBrakeLights.canceled -= instance.OnForceBrakeLights;
            @PersonMovement.started -= instance.OnPersonMovement;
            @PersonMovement.performed -= instance.OnPersonMovement;
            @PersonMovement.canceled -= instance.OnPersonMovement;
            @ToggleFoldingMirrors.started -= instance.OnToggleFoldingMirrors;
            @ToggleFoldingMirrors.performed -= instance.OnToggleFoldingMirrors;
            @ToggleFoldingMirrors.canceled -= instance.OnToggleFoldingMirrors;
            @Interact.started -= instance.OnInteract;
            @Interact.performed -= instance.OnInteract;
            @Interact.canceled -= instance.OnInteract;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="DevelopmentActions.UnregisterCallbacks(IDevelopmentActions)" />.
        /// </summary>
        /// <seealso cref="DevelopmentActions.UnregisterCallbacks(IDevelopmentActions)" />
        public void RemoveCallbacks(IDevelopmentActions instance)
        {
            if (m_Wrapper.m_DevelopmentActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="DevelopmentActions.AddCallbacks(IDevelopmentActions)" />
        /// <seealso cref="DevelopmentActions.RemoveCallbacks(IDevelopmentActions)" />
        /// <seealso cref="DevelopmentActions.UnregisterCallbacks(IDevelopmentActions)" />
        public void SetCallbacks(IDevelopmentActions instance)
        {
            foreach (var item in m_Wrapper.m_DevelopmentActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DevelopmentActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="DevelopmentActions" /> instance referencing this action map.
    /// </summary>
    public DevelopmentActions @Development => new DevelopmentActions(this);
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Development" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="DevelopmentActions.AddCallbacks(IDevelopmentActions)" />
    /// <seealso cref="DevelopmentActions.RemoveCallbacks(IDevelopmentActions)" />
    public interface IDevelopmentActions
    {
        /// <summary>
        /// Method invoked when associated input action "Computer Up" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnComputerUp(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Computer Down" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnComputerDown(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Computer Back" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnComputerBack(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Computer Ok" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnComputerOk(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Computer Prev Page" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnComputerPrevPage(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Computer Next Page" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnComputerNextPage(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ToggleHeadlights" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnToggleHeadlights(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "ToggleIgnition" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnToggleIgnition(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Toggle Camera Lock" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnToggleCameraLock(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Camera X" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCameraX(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Camera Y" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCameraY(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Camera" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCamera(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Camera Zoom In" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCameraZoomIn(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Camera Zoom Out" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCameraZoomOut(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Camera Zoom Reset" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCameraZoomReset(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Camera Zoom Toggle" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnCameraZoomToggle(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Force Brake Lights" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnForceBrakeLights(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Person Movement" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnPersonMovement(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Toggle Folding Mirrors" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnToggleFoldingMirrors(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "Interact" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnInteract(InputAction.CallbackContext context);
    }
}
