//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Resources/Input/Input Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input Actions"",
    ""maps"": [
        {
            ""name"": ""Development"",
            ""id"": ""bea4b291-7728-449b-bec5-758c936fa876"",
            ""actions"": [
                {
                    ""name"": ""Computer Up"",
                    ""type"": ""Button"",
                    ""id"": ""3cf143a0-19ce-4384-b159-3e34d78a3558"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Computer Down"",
                    ""type"": ""Button"",
                    ""id"": ""ea65dcfb-ca44-49a6-bf74-72729fb5550d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Computer Back"",
                    ""type"": ""Button"",
                    ""id"": ""fb0f7fbe-50f7-44bf-ba5e-c30516cac52f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Computer Ok"",
                    ""type"": ""Button"",
                    ""id"": ""9a55cfd9-dd7d-4b69-a502-f748f6c16d28"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Computer Prev Page"",
                    ""type"": ""Button"",
                    ""id"": ""d7e5c4e8-7aca-4dd0-aa20-286da3ec042e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Computer Next Page"",
                    ""type"": ""Button"",
                    ""id"": ""b048965e-3c76-475e-b2f2-5ab810269eb9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""424a2c49-d031-4889-b625-685efccfcd7a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34676683-1e08-4e9a-89a1-bab77d479f93"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5dc2da78-b534-45e1-b46c-fff14b672d5f"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4808c8dd-5d54-4c9b-8a58-042e9763db7a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Ok"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8a77ad3-20e7-41a8-9ac7-3029f46d9e81"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Prev Page"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3f5f3288-0c72-459d-b21b-e82ddae535a6"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Computer Next Page"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Development
        m_Development = asset.FindActionMap("Development", throwIfNotFound: true);
        m_Development_ComputerUp = m_Development.FindAction("Computer Up", throwIfNotFound: true);
        m_Development_ComputerDown = m_Development.FindAction("Computer Down", throwIfNotFound: true);
        m_Development_ComputerBack = m_Development.FindAction("Computer Back", throwIfNotFound: true);
        m_Development_ComputerOk = m_Development.FindAction("Computer Ok", throwIfNotFound: true);
        m_Development_ComputerPrevPage = m_Development.FindAction("Computer Prev Page", throwIfNotFound: true);
        m_Development_ComputerNextPage = m_Development.FindAction("Computer Next Page", throwIfNotFound: true);
    }

    ~@InputActions()
    {
        UnityEngine.Debug.Assert(!m_Development.enabled, "This will cause a leak and performance issues, InputActions.Development.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Development
    private readonly InputActionMap m_Development;
    private List<IDevelopmentActions> m_DevelopmentActionsCallbackInterfaces = new List<IDevelopmentActions>();
    private readonly InputAction m_Development_ComputerUp;
    private readonly InputAction m_Development_ComputerDown;
    private readonly InputAction m_Development_ComputerBack;
    private readonly InputAction m_Development_ComputerOk;
    private readonly InputAction m_Development_ComputerPrevPage;
    private readonly InputAction m_Development_ComputerNextPage;
    public struct DevelopmentActions
    {
        private @InputActions m_Wrapper;
        public DevelopmentActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @ComputerUp => m_Wrapper.m_Development_ComputerUp;
        public InputAction @ComputerDown => m_Wrapper.m_Development_ComputerDown;
        public InputAction @ComputerBack => m_Wrapper.m_Development_ComputerBack;
        public InputAction @ComputerOk => m_Wrapper.m_Development_ComputerOk;
        public InputAction @ComputerPrevPage => m_Wrapper.m_Development_ComputerPrevPage;
        public InputAction @ComputerNextPage => m_Wrapper.m_Development_ComputerNextPage;
        public InputActionMap Get() { return m_Wrapper.m_Development; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DevelopmentActions set) { return set.Get(); }
        public void AddCallbacks(IDevelopmentActions instance)
        {
            if (instance == null || m_Wrapper.m_DevelopmentActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DevelopmentActionsCallbackInterfaces.Add(instance);
            @ComputerUp.started += instance.OnComputerUp;
            @ComputerUp.performed += instance.OnComputerUp;
            @ComputerUp.canceled += instance.OnComputerUp;
            @ComputerDown.started += instance.OnComputerDown;
            @ComputerDown.performed += instance.OnComputerDown;
            @ComputerDown.canceled += instance.OnComputerDown;
            @ComputerBack.started += instance.OnComputerBack;
            @ComputerBack.performed += instance.OnComputerBack;
            @ComputerBack.canceled += instance.OnComputerBack;
            @ComputerOk.started += instance.OnComputerOk;
            @ComputerOk.performed += instance.OnComputerOk;
            @ComputerOk.canceled += instance.OnComputerOk;
            @ComputerPrevPage.started += instance.OnComputerPrevPage;
            @ComputerPrevPage.performed += instance.OnComputerPrevPage;
            @ComputerPrevPage.canceled += instance.OnComputerPrevPage;
            @ComputerNextPage.started += instance.OnComputerNextPage;
            @ComputerNextPage.performed += instance.OnComputerNextPage;
            @ComputerNextPage.canceled += instance.OnComputerNextPage;
        }

        private void UnregisterCallbacks(IDevelopmentActions instance)
        {
            @ComputerUp.started -= instance.OnComputerUp;
            @ComputerUp.performed -= instance.OnComputerUp;
            @ComputerUp.canceled -= instance.OnComputerUp;
            @ComputerDown.started -= instance.OnComputerDown;
            @ComputerDown.performed -= instance.OnComputerDown;
            @ComputerDown.canceled -= instance.OnComputerDown;
            @ComputerBack.started -= instance.OnComputerBack;
            @ComputerBack.performed -= instance.OnComputerBack;
            @ComputerBack.canceled -= instance.OnComputerBack;
            @ComputerOk.started -= instance.OnComputerOk;
            @ComputerOk.performed -= instance.OnComputerOk;
            @ComputerOk.canceled -= instance.OnComputerOk;
            @ComputerPrevPage.started -= instance.OnComputerPrevPage;
            @ComputerPrevPage.performed -= instance.OnComputerPrevPage;
            @ComputerPrevPage.canceled -= instance.OnComputerPrevPage;
            @ComputerNextPage.started -= instance.OnComputerNextPage;
            @ComputerNextPage.performed -= instance.OnComputerNextPage;
            @ComputerNextPage.canceled -= instance.OnComputerNextPage;
        }

        public void RemoveCallbacks(IDevelopmentActions instance)
        {
            if (m_Wrapper.m_DevelopmentActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDevelopmentActions instance)
        {
            foreach (var item in m_Wrapper.m_DevelopmentActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DevelopmentActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DevelopmentActions @Development => new DevelopmentActions(this);
    public interface IDevelopmentActions
    {
        void OnComputerUp(InputAction.CallbackContext context);
        void OnComputerDown(InputAction.CallbackContext context);
        void OnComputerBack(InputAction.CallbackContext context);
        void OnComputerOk(InputAction.CallbackContext context);
        void OnComputerPrevPage(InputAction.CallbackContext context);
        void OnComputerNextPage(InputAction.CallbackContext context);
    }
}
